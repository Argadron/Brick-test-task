// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String 
  role RoleEnum @default(USER)
  isBanned Boolean @default(false) @map("is_banned")

  events UserEvents[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("user")
}

model Event {
  id Int @id @default(autoincrement())
  name String 
  description String 

  users UserEvents[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("event")
}

model UserEvents {
  id Int @default(autoincrement())

  userId Int @map("user_id")
  user User @relation(fields: [userId], references: [id])
  eventId Int @map("event_id")
  event Event @relation(fields: [eventId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@id(fields: [id])
  @@map("user_events")
}

model Category {
  id Int @id @default(autoincrement())
  name String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("category")
}

enum RoleEnum {
  USER 
  ADMIN
}